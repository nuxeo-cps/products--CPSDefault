<dtml-var manage_page_header>
<dtml-let management_view="'Export'">
<dtml-var manage_tabs>
</dtml-let>

<p>You will find below what the Python dictionnary used to create the current
box should look like.</p>

<dtml-let cr="_.chr(13)"
          squote="_.chr(39)"
          dquote="_.chr(34)">
<pre>
'<dtml-var id>': {
    'type': '<dtml-var meta_type>',
<dtml-in propertyItems>
<dtml-if "_.same_type(_['sequence-item'], '')">
<dtml-if "_['sequence-item'].find(dquote) != -1 or
          _['sequence-item'].find(cr) != -1">
    '<dtml-var sequence-key>': """<dtml-var sequence-item html_quote>""",
<dtml-elif "_['sequence-item'].find(squote) != -1">
    '<dtml-var sequence-key>': "<dtml-var sequence-item html_quote>",
<dtml-else>
    '<dtml-var sequence-key>': '<dtml-var sequence-item html_quote>',
</dtml-if>
<dtml-else>
    '<dtml-var sequence-key>': <dtml-var sequence-item>,
</dtml-if>
</dtml-in>
<dtml-if expr="getGuard() is not None">
<dtml-let guard_props="{'permissions' : getGuard().getPermissionsText(),
                        'roles'       : getGuard().getRolesText(),
                        'expr'        : getGuard().getExprText(),}">
    'guard_props': {
    <dtml-in expr="guard_props.items()">
    <dtml-if "_.same_type(_['sequence-item'], '')">
<dtml-if "_['sequence-item'].find(dquote) != -1 or
          _['sequence-item'].find(cr) != -1">
    'guard_<dtml-var sequence-key>': """<dtml-var sequence-item html_quote>""",
<dtml-elif "_['sequence-item'].find(squote) != -1">
    'guard_<dtml-var sequence-key>': "<dtml-var sequence-item html_quote>",
<dtml-else>
    'guard_<dtml-var sequence-key>': '<dtml-var sequence-item html_quote>',
</dtml-if>
<dtml-else>
    'guard_<dtml-var sequence-key>': <dtml-var sequence-item>,
</dtml-if>
    </dtml-in>
   },
</dtml-let>
</dtml-if>
},
</pre>
</dtml-let>

<dtml-var manage_page_footer>
